"use strict";angular.module("wdiApp",["ngAnimate","ngCookies","ngMaterial","ngResource","ngRoute","ngSanitize","ngTouch","chart.js"]).constant("ACTIONS",{TOPIC_UPDATE:"topic-update",COUNTRY_SET_SELECTED:"country-set-selected",COUNTRY_UPDATE:"country-update",COUNTRY_SELECT:"country-select",COUNTRY_DESELECT:"country-deselect",INDICATOR_SET_SELECTED:"indicator-set-selected",INDICATOR_SELECT:"indicator-select",INDICATOR_DESELECT:"indicator-deselect"}).constant("FORMAT",{Number:function(a){return a===Number(a)&&a%1===0?a:Math.round(100*a)/100}}).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]).config(["$mdThemingProvider",function(a){a.definePalette("sage",a.extendPalette("teal",{500:"75B5AA"})),a.theme("default").primaryPalette("sage")}]).config(function(){Parse.initialize("1HjpKS0k6054RdvGjmEwFtCbglfycTkTIqd1k22y","BTXQ11uqQEtihjZAIGMxUr8ZSdVJKXn8KadbC0iJ")}),angular.module("wdiApp").controller("MainCtrl",["$scope","SelectionStore","history","ACTIONS",function(a,b,c,d){a.countries=b.countries(),a.indicators=b.indicators(),c.publish(),a.remove=function(a){b.getDispatcher().dispatch({actionType:d.INDICATOR_DESELECT,indicator:a})};var e=[b.addListener(function(){a.countries=b.countries(),a.indicators=b.indicators()})];a.$on("$destroy",function(){_.forEach(e,function(a){a.remove()})})}]),angular.module("wdiApp").controller("AboutCtrl",function(){}),angular.module("wdiApp").factory("dispatcher",function(){return new Flux.Dispatcher}),angular.module("wdiApp").controller("NavigationCtrl",["$scope","$location","$timeout","$mdSidenav",function(a,b,c,d){a.toggleNavigation=_.debounce(function(){c(function(){d("navigation").toggle()})},200),a.isActive=function(a){return a===b.path()},a.openMenu=function(a,b){a(b)}}]),angular.module("wdiApp").factory("Store",["$timeout","dispatcher",function(a,b){var c=function(){this.__callbacks=[],this.__type="Store"};return c.prototype.init=function(){this.dispatchToken=b.register(this.__handler.bind(this))},c.prototype.addListener=function(a){return this.__callbacks.push(a),this.__createToken(a)},c.prototype.getDispatcher=function(){return b},c.prototype.getDispatchToken=function(){return this.dispatchToken},c.prototype.__handler=function(){throw new Error("Store::__handler() not implemented.")},c.prototype.__emitChange=function(){var b=this.__callbacks;a(function(){b.forEach(function(a){a()})})},c.prototype.__createToken=function(a){var b=this.__callbacks;return{remove:function(){_.pull(b,a)}}},c.prototype.__digest=function(b){var c=new Parse.Promise;return a(function(){c.resolve(b)}),c},c}]),angular.module("wdiApp").factory("TopicStore",["Store","ACTIONS",function(a,b){var c=Parse.Object.extend("Topic"),d=function(){a.call(this),this.__type="TopicStore",this.__topics=[],this.init()};d.prototype=new a,d.constructor=d,d.prototype.__handler=function(a){switch(a.actionType){case b.TOPIC_UPDATE:this.__topics=a.topics;break;default:return}this.__emitChange()},d.prototype.get=function(a){return this.__topics[a]},d.prototype.all=function(){return _.values(this.__topics)};var e=new d,f=new Parse.Query(c);return f.find().then(function(a){e.getDispatcher().dispatch({actionType:b.TOPIC_UPDATE,topics:a})}).fail(console.error.bind(console)),e}]),angular.module("wdiApp").factory("CountryStore",["Store","ACTIONS",function(a,b){var c=Parse.Object.extend("Country"),d=300,e=function(){a.call(this),this.__type="CountryStore",this.__countries={},this.init()};e.prototype=new a,e.constructor=e,e.prototype.__handler=function(a){switch(a.actionType){case b.COUNTRY_UPDATE:this.__countries=_.indexBy(a.countries,"attributes.key");break;default:return}this.__emitChange()},e.prototype.get=function(a){return this.__countries[a]},e.prototype.getByIso2Code=function(a){return _.find(this.__countries,function(b){return b.attributes.iso2Code===a})},e.prototype.all=function(){return _.values(this.__countries)};var f=new e,g=new Parse.Query(c);return g.limit(d).find().then(function(a){f.getDispatcher().dispatch({actionType:b.COUNTRY_UPDATE,countries:_(a).filter("attributes.location").sortBy("attributes.name").value()})}).fail(console.error.bind(console)),f}]),angular.module("wdiApp").factory("IndicatorStore",["Store",function(a){var b=Parse.Object.extend("Indicator"),c=1e3,d=function(){a.call(this),this.__type="IndicatorStore",this.__indicators={},this.__topics={},this.init()};return d.prototype=new a,d.constructor=d,d.prototype.__handler=function(a){switch(a.actionType){default:return}this.__emitChange()},d.prototype.get=function(a){if(a in this.__indicators)return Parse.Promise.as(this.__indicators[a]);var c=new Parse.Query(b);return c.equalTo("key",a).find().then(function(b){return this.__indicators[a]=_.first(b),this.__indicators[a]}.bind(this)).then(this.__digest).fail(console.error.bind(console))},d.prototype.getByTopic=function(a){if(a.get("key")in this.__topics)return Parse.Promise.as(this.__topics[a.get("key")]);var d=new Parse.Query(b);return d.containsAll("topics",[a]).limit(c).find().then(function(b){return this.__topics[a.get("key")]=b,b}.bind(this)).then(this.__digest).fail(console.error.bind(console))},new d}]),angular.module("wdiApp").factory("SelectionStore",["Store","IndicatorStore","CountryStore","history","ACTIONS",function(a,b,c,d,e){var f=function(){a.call(this),this.__type="SelectionStore",this.__countries=[],this.__indicators=[],this.init()};f.prototype=new a,f.constructor=f,f.prototype.__handler=function(a){switch(a.actionType){case e.COUNTRY_SET_SELECTED:this.__countries=a.selected,d.set("countries",_.pluck(this.__countries,"attributes.key"));break;case e.COUNTRY_SELECT:this.__countries.push(a.country),d.set("countries",_.pluck(this.__countries,"attributes.key"));break;case e.COUNTRY_DESELECT:_.remove(this.__countries,a.country),d.set("countries",_.pluck(this.__countries,"attributes.key"));break;case e.INDICATOR_SET_SELECTED:this.__indicators=a.selected,d.set("indicators",_.pluck(this.__indicators,"attributes.key"));break;case e.INDICATOR_SELECT:this.__indicators.push(a.indicator),d.set("indicators",_.pluck(this.__indicators,"attributes.key"));break;case e.INDICATOR_DESELECT:_.remove(this.__indicators,a.indicator),d.set("indicators",_.pluck(this.__indicators,"attributes.key"));break;default:return}this.__emitChange()},f.prototype.countries=function(){return this.__countries},f.prototype.indicators=function(){return this.__indicators};var g=new f;return c.addListener(_.once(function(){g.getDispatcher().dispatch({actionType:e.COUNTRY_SET_SELECTED,selected:_.map(d.get("countries"),function(a){return c.get(a)})})})),Parse.Promise.when(_.map(d.get("indicators"),function(a){return b.get(a)})).then(function(){g.getDispatcher().dispatch({actionType:e.INDICATOR_SET_SELECTED,selected:_.toArray(arguments)})}),g}]),angular.module("wdiApp").controller("SidebarCtrl",["$scope","TopicStore","CountryStore","IndicatorStore","SelectionStore","ACTIONS",function(a,b,c,d,e,f){a.countries=c.all(),a.topics=b.all(),a.indicators=[],a.selectedCountries=e.countries(),a.selectedTopic=null,a.selectedIndicator=null,a.selectedType="line",a.onCountryChange=function(){c.getDispatcher().dispatch({actionType:f.COUNTRY_SET_SELECTED,selected:a.selectedCountries})},a.clearCountries=function(){c.getDispatcher().dispatch({actionType:f.COUNTRY_SET_SELECTED,selected:[]})},a.onTopicChange=function(){d.getByTopic(a.selectedTopic).then(function(b){a.indicators=b})},a.onCreate=function(){e.getDispatcher().dispatch({actionType:f.INDICATOR_SELECT,indicator:a.selectedIndicator})};var g=[b.addListener(function(){a.topics=b.all()}),c.addListener(function(){a.countries=c.all()}),e.addListener(function(){a.selectedCountries=e.countries()})];a.$on("$destroy",function(){_.forEach(g,function(a){a.remove()})})}]),angular.module("wdiApp").directive("indicatorChart",function(){return{template:'<h2 class="md-title">{{ indicator.attributes.name }}</h2><canvas class="chart chart-line"chart-data="data"chart-labels="labels"chart-series="series"chart-legend="true"chart-options="{scaleBeginAtZero: true,scaleShowVerticalLines: false}"></canvas><blockquote class="indicator-notes">{{ indicator.attributes.sourceNote }}</blockquote><p class="indicator-source">{{ indicator.attributes.sourceOrganization }}</p>',restrict:"E",scope:{indicator:"="},controller:"IndicatorChartCtrl"}}),angular.module("wdiApp").controller("IndicatorChartCtrl",["$scope","$attrs","$timeout","CountryStore","SelectionStore","FORMAT",function(a,b,c,d,e,f){var g=Parse.Object.extend("IndicatorCountrySeries");a.countries=e.countries(),a.series=[],a.data=[],a.labels=[];var h=function(){return _.isEmpty(a.countries)?void(a.series=a.data=a.labels=[]):void new Parse.Query(g).equalTo("indicatorKey",a.indicator.get("key")).containedIn("countryKey",_.pluck(a.countries,"attributes.iso2Code")).find().then(function(b){c(function(){var c=function(a,b){return b%5===0};_.isEmpty(b)||(b=_.map(b,function(a){return _.extend(a.attributes,{series:_.clone(a.get("series")).reverse()})}),a.data=_(b).pluck("series").map(_.curry(_.pluck)(_,"value")).map(_.curry(_.filter)(_,c)).map(_.curry(_.map)(_,f.Number)).value(),a.labels=_(b[0].series).filter(c).pluck("date").value(),a.series=_(b).pluck("countryKey").map(d.getByIso2Code,d).pluck("attributes.name").value())})}).fail(console.error.bind(console))};_.isEmpty(e.countries())||h();var i=[e.addListener(function(){var b=_.pluck(a.countries,"attributes.key"),c=_.pluck(e.countries(),"attributes.key");_.isEqual(b,c)||(a.countries=e.countries(),h())})];a.$on("$destroy",function(){_.forEach(i,function(a){a.remove()})})}]),angular.module("wdiApp").service("history",["$route",function(a){var b=["countries","indicators"];this.state=_.merge({countries:["USA","CAN"],indicators:[]},_.pick(a.current.params,b)),this.state.countries=_.isArray(this.state.countries)?this.state.countries:[this.state.countries],this.state.indicators=_.isArray(this.state.indicators)?this.state.indicators:[this.state.indicators],this.get=function(a){return this.validate(a),this.state[a]},this.set=function(a,b){return this.validate(a),this.state[a]=b,this.publish(),this},this.validate=function(a){if(!_.contains(b,a))throw new Error("Unexpected key "+a)},this.publish=function(){a.updateParams(this.state)}}]),angular.module("wdiApp").run(["$templateCache",function(a){a.put("views/about.html",'<div class="row about-content"> <md-card> <md-card-content> <h2 class="md-headline">Overview</h2> <p> Browse global development data with custom visualizations. This project is an open source alternative to the World Bank world development indicators website, which also offers visualization tools. </p> <p>To see the official website and access original data, refer to the <a target="_blank" href="http://data.worldbank.org/data-catalog/world-development-indicators"> World Bank website</a>.</p> <h2 class="md-headline">Data</h2> <p> To allow easier access to the original dataset, I’ve copied it into a <a target="_blank" href="https://parse.com/">Parse</a> database. I’m happy to give others access to that, or a raw copy of its contents, but please don’t rely on my APIs directly – they are liable to change without warning. Contact information is on <a href="https://www.donmccurdy.com/"> my website</a>. </p> </md-card-content> </md-card> </div>'),a.put("views/header.html",'<div class="md-toolbar-tools"> <md-button ng-if="isActive(\'/\')" ng-click="toggleNavigation()" hide-gt-sm class="md-icon-button"> <md-icon aria-label="Menu" md-svg-icon="images/icons/menu.204f61a1.svg"></md-icon> </md-button> <a href="#/"> <h1> <span hide-sm>World Development Indicators</span> <span hide show-sm>WDI</span> </h1> </a> <span flex></span> <md-button ng-href="#/" ng-class="{ active: isActive(\'/\') }">Explore</md-button> <md-button ng-href="#/about" ng-class="{ active: isActive(\'/about\') }">About</md-button> </div>'),a.put("views/main.html",'<md-card class="indicator-card" ng-if="countries.length" ng-repeat="indicator in indicators"> <md-card-content> <indicator-chart indicator="indicator"></indicator-chart> <md-button class="indicator-x md-icon-button" ng-click="remove(indicator)" aria-label="Favorite"> <md-icon md-svg-icon="images/icons/clear.addfce46.svg"></md-icon> </md-button> </md-card-content> </md-card> <div ng-if="!indicators.length || !countries.length" class="row placeholder md-display-1"> <md-icon class="placeholder-icon" md-svg-icon="images/icons/equalizer.19b1e365.svg"></md-icon> <span ng-if="!countries.length">Select a country.</span> <span ng-if="countries.length && !indicators.length">Create a visualization.</span> </div>'),a.put("views/sidebar.html",'<div ng-controller="SidebarCtrl"> <md-toolbar class="md-theme-indigo"> <h1 class="md-toolbar-tools">Countries</h1> </md-toolbar> <md-content layout-padding> <md-input-container class="md-input-container"> <label>Country</label> <md-select ng-model="selectedCountries" ng-change="onCountryChange()" ng-model-options="{trackBy: \'$value.attributes.key\'}" multiple aria-label="Select country"> <md-option ng-repeat="country in countries" ng-value="country"> {{ country.get(\'name\') }} </md-option> </md-select> </md-input-container> <md-button class="right md-primary" ng-click="clearCountries()">Clear</md-button> </md-content> <md-toolbar class="md-theme-indigo"> <h1 class="md-toolbar-tools">Create Visualization</h1> </md-toolbar> <md-content layout-padding> <md-input-container class="md-input-container md-create-group"> <label>Topic</label> <md-select ng-model="selectedTopic" ng-change="onTopicChange()" ng-model-options="{trackBy: \'$value.attributes.key\'}" aria-label="Select topic"> <md-option ng-repeat="topic in topics" ng-value="topic"> {{ topic.get(\'value\') }} </md-option> </md-select> </md-input-container> <div class="md-create-group" ng-show="selectedTopic && !indicators.length"> <md-progress-linear md-mode="indeterminate"></md-progress-linear> </div> <md-input-container class="md-input-container md-create-group" ng-show="indicators.length"> <label>Indicator</label> <md-select ng-model="selectedIndicator" aria-label="Select indicator"> <md-option ng-repeat="indicator in indicators" ng-value="indicator"> {{ indicator.get(\'name\') }} </md-option> </md-select> </md-input-container> <div ng-if="selectedIndicator" class="md-subhead">Description</div> <div ng-if="selectedIndicator" class="md-caption md-scroll-caption md-create-group"> <p>{{ selectedIndicator.get(\'sourceNote\') }}</p> <p><i>{{ selectedIndicator.get(\'sourceOrganization\') }}</i></p> </div> <div class="md-create-group"> <div class="md-subhead">Chart type</div> <md-radio-group ng-model="selectedType"> <md-radio-button value="line" class="md-primary" ng-selected="true">Line</md-radio-button> <md-radio-button value="bar" class="md-primary" disabled>Bar</md-radio-button> <md-radio-button value="pie" class="md-primary" disabled>Pie</md-radio-button> </md-radio-group> </div> <md-button class="md-raised md-primary right" ng-click="onCreate()" aria-label="Create"> <md-icon md-svg-src="images/icons/add.22545845.svg"></md-icon> </md-button> </md-content> </div>')}]);